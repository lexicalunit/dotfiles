#!/bin/bash -e

# Cleans up package manager caches.

usage() {
    echo "usage: ${0##*/} [options]" 1>&2
    echo "" 1>&2
    echo "Cleans up package manager caches." 1>&2
    echo ""
    echo "options:"
    echo " -h or --help shows usage help" 1>&2
    exit 1
}

if echo "$*" | grep -Eq -- "\\b--help\\b|\\b-h\\b"; then
    usage
fi

# shellcheck source=.shell_control
# shellcheck disable=SC1091
source "$HOME/.shell_control" || echo "$(tput bold)error: ~/.shell_control not installed!$(tput sgr0)" >&2

BEFORE="$(df -B1 --output=avail "$HOME" | grep -iv avail)"
show "disk space available before cleanup: $(numfmt --to=iec-i --suffix=B -- "$BEFORE")"

# brew
command -v brew >/dev/null 2>&1 && run "brew cleanup"

# rvm
command -v rvm >/dev/null 2>&1 && run "rvm cleanup all"

# gem
command -v gem >/dev/null 2>&1 && run "gem cleanup"

# babel
test -e "$HOME/.babel.json" && run "rm -f '$_'"

# cargo
if command -v cargo >/dev/null 2>&1; then
    run "rm -rf '$HOME/.cargo/registry'"
    run "rm -rf '$HOME/.cargo/git'"
fi

# conda
command -v conda >/dev/null 2>&1 && run "conda clean -a --yes"

# npm
command -v npm >/dev/null 2>&1 && run "npm -g cache clean --force"

# node-gyp
test -d "$HOME/.node-gyp" && run "rm -rf '$_'"

# atom
command -v apm >/dev/null 2>&1 && run "apm clean"

# report
AFTER="$(df -B1 --output=avail "$HOME" | grep -iv avail)"
show "disk space available after cleanup: $(numfmt --to=iec-i --suffix=B -- "$BEFORE")"
RECLAIMED="$((AFTER - BEFORE))"
if [[ "$RECLAIMED" -gt "0" ]]; then
    show "disk space reclaimed by cleanup: $(numfmt --to=iec-i --suffix=B -- "$RECLAIMED")"
fi
