#!/bin/sh

# In git, change the author name and/or email of a single commit.
# Source: http://stackoverflow.com/a/3042706

usage() {
    echo "usage: ${0##*/} [-f] commit-to-change [branch-to-rewrite [new-name [new-email]]]" >&2
    echo "" >&2
    echo "  If -f is supplied it is passed to 'git filter-branch'." >&2
    echo "" >&2
    echo "  If <branch-to-rewrite> is not provided or is empty HEAD will be used." >&2
    echo "  Use '--all' or a space separated list (e.g. 'master next') to rewrite" >&2
    echo "  multiple branches." >&2
    echo "" >&2
    echo "  If <new-name> (or <new-email>) is not provided or is empty, the normal" >&2
    echo "  user.name (user.email) Git configuration value will be used." >&2
    exit 1
}

if echo "$*" | grep -Eq -- '--help\b|-h\b'; then
    usage
fi

force=''
if test "x$1" = "x-f"; then
    force='-f'
    shift
fi

abort() {
    printf '%s\n' "$@"
    exit 128
}

targ="$(git rev-parse --verify "$1" 2>/dev/null)" || abort "$1 is not a commit"
br="${2:-HEAD}"

TARG_COMMIT="$targ"
TARG_NAME="${3-}"
TARG_EMAIL="${4-}"
export TARG_COMMIT TARG_NAME TARG_EMAIL

# shellcheck disable=SC2016
filt='

    if test "$GIT_COMMIT" = "$TARG_COMMIT"; then
        if test -n "$TARG_EMAIL"; then
            GIT_AUTHOR_EMAIL="$TARG_EMAIL"
            export GIT_AUTHOR_EMAIL
        else
            unset GIT_AUTHOR_EMAIL
        fi
        if test -n "$TARG_NAME"; then
            GIT_AUTHOR_NAME="$TARG_NAME"
            export GIT_AUTHOR_NAME
        else
            unset GIT_AUTHOR_NAME
        fi
    fi

'

git filter-branch $force --env-filter "$filt" -- "$br"
