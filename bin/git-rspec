#!/bin/bash

# Runs rspec tests that have changed within in the latest N commits.

set -ue

usage() {
    (
        echo "usage: ${0##*/} [-h|--help] [N]"
        echo "Runs rspec tests that have changed within in the latest N commits."
        echo
        echo "options:"
        (
            echo "    -h, --help: show usage help"
            echo "    N: number of commits to consider, default is 1"
        ) | column -ts:
    ) >&2
    exit 1
}

show() {
    # usage: show [-i|-r] <message>
    # -i: show an important message
    # -r: show a command
    local important=0
    if [[ $1 == "-i" ]]; then
        shift
        important=1
        echo -n $'\e[38;5;196m'"$(tput bold)! "
    elif [[ $1 == "-r" ]]; then
        shift
        echo -n $'\e[38;5;40m$\e[38;5;63m '
    else
        echo -n $'\e[1;34m>\e[0m\e[31m '
    fi

    echo -n "$@"

    if [[ $important == "1" ]]; then
        echo -n " $(tput sgr0)"$'\e[0m'
    else
        echo -n $'\e[0m'
    fi

    echo
}

run() {
    show -r "$@"
    eval "$@"
    return $?
}

BACK=${2:-1}
BACK=$((BACK - 1))
REFS="HEAD"
for i in $(seq 1 $BACK); do
    REFS="$REFS HEAD~$i"
done

tf="$(mktemp -t tmp.XXXXXXXXXX)"
trap 'rm -f $tf' EXIT

git show --pretty="" --name-only $REFS | grep -iE "_spec\.rb$" |
    while read -r RBFILE; do
        echo "    $RBFILE \\" >> "$tf"
    done

if [[ -s "$tf" ]]; then
    run "bin/rspec \\
$(sort -u <"$tf")"
fi
