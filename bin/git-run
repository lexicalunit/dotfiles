#!/bin/bash

# Runs a command on files that have recently changed.

set -e

usage() {
    (
        echo "usage: ${0##*/} [-h|--help] COMMAND PATTERN [-N]"
        echo "Runs the given command on files matching the given pattern that"
        echo "have changed within in the latest N commits. Or if there are any"
        echo "uncomitted changes, run the command on those matching files."
        echo
        echo "options:"
        (
            echo "    -h, --help: show usage help"
            echo "    -N: number of commits to consider, default is -1"
        ) | column -ts:
    ) >&2
    exit 1
}

if echo "$*" | grep -Eq -- '--help\b|-h\b' || [[ -z $1 ]] || [[ -z $2 ]]; then
    usage
fi

set -u

run() {
    echo -n $'\e[38;5;40m$\e[38;5;63m '
    echo -n "$@"
    echo $'\e[0m'
    eval "$@"
    return $?
}

COMMAND="$1"
PATTERN="$2"
LOOKBACK=${3:--1}

tf="$(mktemp -t tmp.XXXXXXXXXX)"
trap 'rm -f $tf' EXIT

write_lines() {
    while read -r MATCHING_FILE; do
        echo "    $MATCHING_FILE \\" >>"$tf"
    done
}

CHANGED=$(git status --porcelain | sed -e 's/^.. //' | grep -iE "$PATTERN" || true)
if [[ -n $CHANGED ]]; then
    echo "$CHANGED"
else
    git log --pretty="" --name-only "$LOOKBACK" | grep -iE "$PATTERN" || true
fi | write_lines

if [[ -s $tf ]]; then
    run "$COMMAND \\
$(sort -u <"$tf" | sed '$ s/\\$//g')"
else
    echo "no matching files" >&2
    exit 1
fi
