#!/bin/bash -ue

# Runs pytest tests locally.

usage() {
    (
        echo "usage: ${0##*/} [-h|--help] args"
        echo "Runs pytest tests locally."
        echo
        echo "options:"
        (
            echo "    -h, --help@ show usage help"
        ) | column -ts@
    ) >&2
    exit 1
}

if echo "$*" | grep -Eq -- '--help\b|-h\b'; then
    usage
fi

USE_PIPENV=0
if [[ -n "$(command -v pipenv)" ]]; then
    USE_PIPENV=1
fi

USE_PYTEST=0
if [[ -n "$(command -v pytest)" ]]; then
    USE_PYTEST=1
fi

USE_UNITTEST=0
if [[ $USE_PIPENV == "0" && $USE_PYTEST == "0" ]]; then
    USE_UNITTEST=1
fi

# shellcheck source=.shell_control
# shellcheck disable=SC1091
source "$HOME/.shell_control" || echo "$(tput bold)error: ~/.shell_control not installed!$(tput sgr0)" >&2

export PIPENV_VERBOSITY="-1"
export PIPENV_QUIET="1"
export LOG_LEVEL="WARNING"

COMMAND=""
if [[ $USE_UNITTEST == "1" ]]; then
    COMMAND="python -m unittest $*"
elif [[ $USE_PYTEST == "1" ]]; then
    COMMAND="pytest --disable-pytest-warnings -vv --no-header --show-capture=stdout --capture=tee-sys $*"
fi

if [[ $USE_PIPENV == "1" ]]; then
    COMMAND="pipenv run $COMMAND"
fi

run "$COMMAND"
