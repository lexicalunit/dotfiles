#!/bin/bash
# shellcheck disable=SC2153
# Easy way to manage temporary web shares.

usage() {
    echo "usage ${0##*/} [<file>|ls|names|ssh|get <name(s)>|put <file(s)>|rm <name>]" 1>&2
    echo "Requires ~/.webshare script be created for your webshare configuration."
    echo
    echo "The ~/.webshare script must set environment variables:"
    echo " * SHARE_USER - user to use when connecting to SHARE_HOST"
    echo " * SHARE_HOST - the hostname to connect to"
    echo " * SHARE_DEST - the root of the shares directory on SHARE_HOST"
    echo " * SHARE_URI  - the base URI for shared files"
    exit 1
}

[[ -f "$HOME/.webshare" ]] || usage
# shellcheck source=.webshare
# shellcheck disable=1091
source "$HOME/.webshare"
[[ -n "$SHARE_USER" ]] || usage
[[ -n "$SHARE_HOST" ]] || usage
[[ -n "$SHARE_DEST" ]] || usage
[[ -n "$SHARE_URI" ]] || usage

share_put() {
    for I in "$@"; do
        NAME="$(basename "$I")"
        if rsync --chmod=a+r --rsh="ssh -c blowfish" "$I" "$SHARE_USER@$SHARE_HOST:$SHARE_DEST/$NAME"; then
            echo "$SHARE_URI/$NAME"
        fi
    done
}

list_files() {
    local cmd="                     \
        find $SHARE_DEST            \
            -maxdepth 1             \
            -type f                 \
            -not -name '.*'         \
            -not -name index.php    \
            -print0                 \
        | xargs -0 ls -1tr          \
    "

    # Note that we DO want to expand $SHARE_DEST locally here.
    # shellcheck disable=SC2029
    ssh "$SHARE_USER@$SHARE_HOST" "$cmd"
}

[[ -n "$1" ]] || usage

# shortcut for put
if [[ -f "$1" ]]; then
    share_put "$1"
    exit 0
fi

case "$1" in
    help | -h | --help | h* | -*)
        usage
        ;;

    names | n*)
        if echo "$*" | grep -Eq -- "-p|--private"; then
            SHARE_DEST="$SHARE_DEST/private"
            SHARE_URI="$SHARE_URI/private"
        fi
        list_files | sed "s@$SHARE_DEST/@@g"
        ;;

    list | ls | l | ll | find | f | l* | f*)
        if echo "$*" | grep -Eq -- "-p|--private"; then
            SHARE_DEST="$SHARE_DEST/private"
            SHARE_URI="$SHARE_URI/private"
        fi
        list_files | sed "s@$SHARE_DEST/@$SHARE_URI/@g"
        ;;

    put | p | up | p* | u*)
        [[ -n "$2" ]] || usage
        if echo "$2" | grep -Eq -- "-p|--private"; then
            shift
            SHARE_DEST="$SHARE_DEST/private"
            SHARE_URI="$SHARE_URI/private"
        fi
        shift
        share_put "$@"
        ;;

    get | g*)
        [[ -n "$2" ]] || usage
        if echo "$2" | grep -Eq -- "-p|--private"; then
            shift
            SHARE_DEST="$SHARE_DEST/private"
            SHARE_URI="$SHARE_URI/private"
        fi
        shift
        for I in "$@"; do
            scp "$SHARE_USER@$SHARE_HOST:$SHARE_DEST/$I" .
        done
        ;;

    ssh | open | shell | s*)
        ssh "$SHARE_USER@$SHARE_HOST"
        ;;

    del | delete | rm)
        [[ -n "$2" ]] || usage
        if echo "$2" | grep -Eq -- "-p|--private"; then
            shift
            SHARE_DEST="$SHARE_DEST/private"
            SHARE_URI="$SHARE_URI/private"
        fi
        NAME="$2"

        # Note that we DO want to expand $SHARE_DEST/$NAME locally here.
        # shellcheck disable=SC2029
        ssh "$SHARE_USER@$SHARE_HOST" "rm -fv $SHARE_DEST/$NAME"
        ;;
esac
