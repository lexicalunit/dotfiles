#!/bin/bash

# Prints out documentation and usages for utilities.

if echo "$*" | grep -Eq -- "\\b--help\\b|\\b-h\\b"; then
    (
        echo "usage: ${0##*/} [-t|--table|-v|--verbose|-h|--help]"
        echo "Prints out documentation and usage information for everything in current directory."
        echo
        echo "-t,--table:   prints out information in a markdown table."
        echo "-v,--verbose: prints out all usage information in markdown format."
        echo "-v,--help:    prints out this help message."
    ) 1>&2
    exit 1
fi

# Some help messages are adjusted to fit terminal columns, so setting a
# default constant value here avoids usages producing different output
# when run in different terminal windows.
export COLUMNS=120
stty columns 120 2>/dev/null

# -t or --table enabled table mode for generating markdown output
TABLE=0
if echo "$*" | grep -Eq -- "--table|-t"; then
    TABLE=1
    echo "| Tool | Usage |"
    echo "| --- | --- |"
fi

VERBOSE=0
if echo "$*" | grep -Eq -- "--verbose|-v"; then
    VERBOSE=1
fi

for I in *; do
    if [[ "$I" == ".gitignore" || "$I" == "README.md" ]]; then
        continue
    fi

    if grep -Eq "^$I\$" .gitignore; then
        continue
    fi

    # tool name
    if [[ $VERBOSE == 1 ]]; then
        echo "* * *"
        echo -en "### [\`$I\`]($I)"
    elif [[ $TABLE == 1 ]]; then
        echo -en "| [\`$I\`](bin/$I) | "
    else
        echo -n "$I - "
    fi

    # describe tool or symbolic link
    DESC=""
    if [[ "$I" == "macosver" ]]; then
        if [[ $VERBOSE == 1 ]]; then
            DESC=$'\n```\n'"usage: macosver"$'\n\n'"Simply prints out the macOS major and minor version."$'\n```\n'
        else
            DESC="Prints current macOS version information."
        fi
    elif file -h "$I" | grep -q 'symbolic link to'; then
        if [[ $VERBOSE == 1 ]]; then
            echo
        fi
        # shellcheck disable=SC2012
        DESC="Symbolic link to '$(ls -l "$I" | sed 's@.* -> \(.*\)@\1@')'"
    elif [[ $VERBOSE == 0 ]]; then
        DESC="$(head -n 3 "$I" | tail -n 1 | sed 's@[^ ]* \(.*\)@\1@')"
    fi

    if [[ $VERBOSE == 1 && "$I" != "macosver" ]]; then
        DESC="$DESC"$'\n```\n'"$("./$I" --help 2>&1)"$'\n```\n'
    fi

    # truncate long descriptions
    if [[ $TABLE == 1 ]]; then
        DESC="$(echo "$DESC" | awk -v len=70 '{ if (length($0) > len) print substr($0, 1, len-3) "..."; else print; }')"
    fi

    echo -n "$DESC"

    if [[ $TABLE == 1 ]]; then
        echo " |"
    else
        echo
    fi
done
