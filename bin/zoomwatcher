#!/bin/bash

# A service that watches for zoom and turns a blinkstick red if it is running.

usage() {
    echo "usage: ${0##*/} [options]" 1>&2
    echo "" 1>&2
    echo "A service that watches for zoom and turns a blinkstick red if it is running." 1>&2
    echo ""
    echo "options:"
    echo " -h or --help shows usage help" 1>&2
    exit 1
}

if echo "$*" | grep -Eq -- '--help\b|-h\b'; then
    usage
fi

# shellcheck source=.blinkstick_control
# shellcheck disable=SC1091
source "$HOME/.blinkstick_control" || echo "$(tput bold)error: ~/.blinkstick_control not installed!$(tput sgr0)" >&2

BR_TABS=""
brave_tabs() {
    BRAVE="osascript -e 'tell application \"System Events\" to (name of processes) contains \"Brave Browser\"'"
    if test "$(eval "$BRAVE")" = "true"; then
        osascript <<EOF
set titleString to ""

tell application "Brave Browser"
    set window_list to every window # get the windows
    repeat with the_window in window_list # for every window
        set tab_list to every tab in the_window # get the tabs
        repeat with the_tab in tab_list # for every tab
            set the_url to the URL of the_tab # grab the URL
            set titleString to titleString & the_url & "\n"
        end repeat
    end repeat
end tell
EOF
    fi
}

FF_TABS=""
firefox_tabs() {
    "$HOME"/bin/firefox-tabs
}

ZOOM="false"
zoom_running() {
    osascript -e 'tell application "System Events" to (name of processes) contains "zoom.us"'
}

in_meeting() {
    test "$ZOOM" = "true" ||
        echo "$FF_TABS" | /usr/bin/grep -q "meet.google.com" ||
        echo "$BR_TABS" | /usr/bin/grep -q "meet.google.com"
}

in_game() {
    ps -efw | grep "Steam" | grep -Eiv "helper|ipcserver|grep" ||
        echo "$FF_TABS" | /usr/bin/grep -q "spelltable.com" ||
        echo "$BR_TABS" | /usr/bin/grep -q "spelltable.com"
}

while true; do
    ZOOM="$(eval "$ZOOM")"
    BR_TABS="$(eval brave_tabs)"
    FF_TABS="$(eval firefox_tabs)"
    ZOOM="$(eval zoom_running)"

    if ! blink_is_busy; then
        if in_meeting; then
            if ! blink_is_red; then
                blink_set_color red
            fi
        elif in_game; then
            if ! blink_is_purple; then
                blink_set_color purple
            fi
        else
            if ! blink_is_green; then
                blink_set_color green
            fi
        fi
    fi
    sleep 1
done
